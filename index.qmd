---
title: "An치lises Descritivas do Piloto (Laura Acevedo)"
---

```{r, include=FALSE}
#| label: knitr options
knitr::opts_chunk$set(results = 'asis',
                      echo = FALSE,
                      warning = FALSE,
                      tidy = FALSE,
                      message = FALSE,
                      fig.align = 'center',
                      out.width = "100%")
options(knitr.table.format = "html")
```

```{r}
#| label: packages
#| echo: false

library(tidyverse)
library(gtsummary)
library(gtsummary)
library(modelsummary)
library(jtools)
library(ggstatsplot)
library(labelled)
library(glue)
library(correlation)
library(GGally)
library(jtools)
```

```{r}
#| echo: false
df <- readRDS(file = "data_private/df_no_nas.RDS")

df_select <- df |> 
     select(c(
            idade, 
            dplyr::ends_with("rec"),
            dplyr::ends_with("rec2"),
            dplyr::contains("gad"),
            dplyr::contains("igi"),
            dplyr::contains("phq"),
            alcool, tabaco
            ))
```

# An치lise Descritiva

```{r}
#| label: sequencia das vari치veis na tabela 1
#| echo: false
# Um vetor nomeado: nomes das vari치veis = label tabela 1
variaveis_labels <- c(
  # Vari치veis Categ칩ricas
  sexo_rec = "Sexo",
  raca_rec = "Ra칞a",
  escolaridade_rec2 = "Escolaridade",
  estado_civil_rec2 = "Estado Civil",
  tipo_moradia_rec2 = "Moradia",
  situacao_ocupacional_rec2 = "Situa칞칚o Ocupacional",
  renda_rec2 = "Renda",
  suporte_social_rec = "Suporte Social (companhia)",
  suporte_social2_rec = "Suporte Social (apoio)",
  alcool = "Uso de Alcool", 
  tabaco = "Uso de Tabaco",
  phq9_cat_rec = "PHQ-9 (categorias)",
  igi_cat_rec = "IGI (categorias)",
  gad7_cat_rec = "GAD-7 (categorias)",

  
  # Vari치veis Num칠ricas
  idade = "Idade",
  score_phq = "PHQ-9",
  score_igi = "IGI",
  score_gad = "GAD-7"
)

# Agora voc칡 faz tudo junto:
df_select_ordered <- df_select |>
  select(all_of(names(variaveis_labels))) |>   # seleciona na ordem
  set_variable_labels(.labels = variaveis_labels)  # aplica labels de uma vez
```

```{r}
#| label: pacote {gtsummary}
table_descriptives <- df_select_ordered |>
     tbl_summary(
          statistic = list(
               all_continuous() ~ "{mean} ({sd}) ({min}-{max})",
               all_categorical() ~ "{n} ({p}%)"), 
          digits = all_continuous() ~ 2,
          missing = "no") |> 
     bold_labels() |> 
     modify_header(label = "**Vari치vel**")

table_descriptives

table_descriptives |> 
     as_gt() |>
     gt::gtsave(filename = "output/table1_2.docx")
```

```{r}

# Pivot mais limpa
df_long <- df_select_ordered |>
  select(phq9_cat_rec, igi_cat_rec, gad7_cat_rec) |>
  pivot_longer(
    cols = everything(),
    names_to = "instrumento",
    values_to = "categoria"
  ) |>
  mutate(
    instrumento = recode(instrumento,
                         "phq9_cat_rec" = "PHQ-9",
                         "igi_cat_rec" = "IGI",
                         "gad7_cat_rec" = "GAD-7"),
    categoria = as.factor(categoria), # for칞ar como texto!
    categoria = fct_relevel(categoria, c("Nenhum/Leve", "M칤nimo","Leve",  "Moderado", "Moderadamente Grave", "Grave"))
  )

ggplot(df_long, aes(x = categoria, fill = instrumento)) +
  geom_bar(position = "dodge") +
  facet_wrap(~ instrumento, scales = "free_x") +
  labs(
    title = "Distribui칞칚o das categorias por instrumento",
    x = "Categoria",
    y = "Frequ칡ncia"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

# Correla칞칚o

```{r}
#| label: correla칞칚o

table_correlation <- datasummary_correlation(df_select_ordered)

ggcorr(df_select_ordered, 
       low = "#F21A00", 
       mid = "#EEEEEE", 
       high = "#3B9AB2",
       name = "Correla칞칚o 
de Pearson
", 
       label = TRUE,
       label_size = 4,
       label_alpha = TRUE,
       hjust = 0.58, 
       size = 4, 
       color = "grey50")
```

```{r}
#| eval: false
#| echo: false
# 1. Vetor de vari치veis explicativas
variaveis_explicativas <- c(
  "sexo_rec",
  "raca_rec",
  "escolaridade_rec2",
  "idade",
  "score_phq",
  "score_gad"
)

# 2. Fun칞칚o geral de regress칚o
rodar_regressao <- function(dep_var, ind_var) {
  formula_reg <- as.formula(paste(dep_var, "~", ind_var))
  lm(formula = formula_reg, data = df_select_ordered)
}

# 3. Fixar a vari치vel dependente, e mapear nas independentes
lista_modelos <- map(
  variaveis_explicativas,
  ~ rodar_regressao(dep_var = "score_igi", ind_var = .x)
)

# 4. Nomear os modelos
names(lista_modelos) <- paste0("Modelo: ", variaveis_explicativas)

# 5. Mostrar com modelsummary
modelsummary(
  models = lista_modelos,
  estimate = "{estimate}{stars} [{conf.low}, {conf.high}]",
  stars = c('*' = .05, '**' = .01),
  statistic = NULL,
  gof_omit = 'Log.Lik|RMSE',
  fmt = 2,
  notes = "* p < 0.05, ** p < 0.001"
)
```

```{r}
#| label: fun칞칚o gr치fico
#| eval: false
#| echo: false

graph <- function(x, y) {
  
  # Capturar os nomes
  x_name <- x
  y_name <- y

  # Criar o gr치fico
  plot <- ggbetweenstats(
    data = df_select_ordered, 
    x = !!sym(x),
    y = !!sym(y),
    pairwise.display = "s",
    violin.args = list(width = 0, linewidth = 0),
    bf.message = FALSE
  )
  
  # Salvar o gr치fico
  ggsave(
    filename = glue("img/{x_name}_{y_name}.png"),
    plot = plot,
    width = 10,
    height = 6,
    dpi = 300
  )
}

# Vari치veis categ칩ricas (independentes)
vars <- df_select_ordered |> 
  select(!where(is.numeric)) |> 
  names()

# Agora: usar map() corretamente passando tamb칠m o y fixo
map(vars, ~ graph(x = .x, y = "score_igi"))
map(vars, ~ graph(x = .x, y = "score_phq"))
map(vars, ~ graph(x = .x, y = "score_gad"))
```

# Gr치ficos

<details>

<summary>游늵 Gr치ficos IGI-Score</summary>

```{r}
#| echo: false

imagens <- list.files(path = "img/", pattern = "\\igi.png$", full.names = TRUE)
knitr::include_graphics(imagens)
```

</details>

<details>

<summary>游늵 Gr치ficos PHQ-Score</summary>

```{r}
#| echo: false

imagens <- list.files(path = "img/", pattern = "\\phq.png$", full.names = TRUE)
knitr::include_graphics(imagens)
```

</details>

<details>

<summary>游늵 Gr치ficos GAD7-Score</summary>

```{r}
#| echo: false

imagens <- list.files(path = "img/", pattern = "\\gad.png$", full.names = TRUE)
knitr::include_graphics(imagens)
```

</details>
